name: Build and Download Native Lib Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          java-package: jdk
          architecture: x64
          distribution: 'temurin'

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Clean previous builds
        run: |
          rm -rf .venv
          rm -rf /home/runner/.local/share/python-for-android/dists/*

      - name: Upload requirements.txt
        run: |
          if [ ! -f requirements.txt ]; then
            echo "requirements.txt not found!"
            exit 1
          fi
          cat requirements.txt

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext libiconv-hook-dev autoconf automake \
            libtool pkg-config m4 libtool-bin libltdl-dev

      - name: Verify Dependencies Installation
        run: |
          if ! command -v autoconf &> /dev/null; then
            echo "autoconf could not be found"
            exit 1
          fi
          if ! command -v automake &> /dev/null; then
            echo "automake could not be found"
            exit 1
          fi

      - name: Install Python Dependencies and Build Tools
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip setuptools wheel maturin
          git config --global url."https://${{ secrets.GITHUB_TOKEN }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
          pip install git+https://github.com/kivy/python-for-android.git@1.6.0 || pip install python-for-android
          pip install --upgrade cython pipgrip

      - name: Extract dependencies with pipgrip
        run: |
          source .venv/bin/activate
          pipgrip $(cat requirements.txt) --lock

      - name: Create setup.py
        run: |
          PACKAGE_NAME=$(head -n 1 requirements.txt | cut -d'=' -f 1)
          echo "from setuptools import setup, find_packages" > setup.py
          echo "" >> setup.py
          echo "setup(" >> setup.py
          echo "    name='${PACKAGE_NAME}'," >> setup.py
          echo "    version='0.1'," >> setup.py
          echo "    packages=find_packages()," >> setup.py
          echo "    install_requires=[" >> setup.py
          echo "        # Add your dependencies here" >> setup.py
          echo "    ]," >> setup.py
          echo "    python_requires='>=3.6'," >> setup.py
          echo ")" >> setup.py

      - name: Set up Android SDK
        run: |
          mkdir -p $HOME/Android/Sdk/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip
          unzip commandlinetools-linux-7302050_latest.zip -d $HOME/Android/Sdk/cmdline-tools/
          mv $HOME/Android/Sdk/cmdline-tools/cmdline-tools $HOME/Android/Sdk/cmdline-tools/latest

          echo "ANDROID_SDK_ROOT=$HOME/Android/Sdk" >> $GITHUB_ENV
          echo "SDK_ROOT=$HOME/Android/Sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$HOME/Android/Sdk/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "PATH=$PATH:$HOME/Android/Sdk/cmdline-tools/latest/bin:$HOME/Android/Sdk/platform-tools:$ANDROID_NDK_HOME" >> $GITHUB_ENV

          yes | $HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --install "platform-tools" "platforms;android-33" "build-tools;33.0.0"

      - name: Check Android SDK Installation
        run: |
          if [ ! -d "$ANDROID_SDK_ROOT" ]; then
            echo "Android SDK directory does not exist!"
            exit 1
          fi
          if [ ! -f "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" ]; then
            echo "SDK Manager not found!"
            exit 1
          fi

      - name: Remove version
        run: |
          sed -i 's/==.*//g' pipgrip.lock

      - name: Install Android NDK
        run: |
          NDK_VERSION="25.2.9519653"
          yes | $HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager --install "ndk;$NDK_VERSION" --channel=3

      - name: Build Android Package
        id: build_package
        run: |
          source .venv/bin/activate
          p4a create --requirements=$(paste -s -d, pipgrip.lock) --arch arm64-v8a --arch armeabi-v7a --arch x86_64 --sdk-dir $ANDROID_SDK_ROOT --ndk-dir $ANDROID_NDK_HOME --dist-name pyzbar || { echo 'Failed to build Android package'; exit 1; }

      - name: Rename to pyzbar.whl
        run: |
          cd /home/runner/.local/share/python-for-android/dists
          mv pyzbar/dist/pyzbar-*.whl pyzbar.whl || { echo 'Failed to rename wheel file'; exit 1; }

      - name: List wheel files
        run: |
          ls -la /home/runner/.local/share/python-for-android/dists

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel
          path: /home/runner/.local/share/python-for-android/dists/pyzbar.whl
